{
  "$ref": "#/definitions/ClusterConfig",
  "type": "object",
  "$schema": "http://json-schema-org/draft-07/schema#",
  "definitions": {
    "ClusterCloudWatch": {
      "properties": {
        "clusterLogging": {
          "$ref": "#/definitions/ClusterCloudWatchLogging"
        }
      },
      "preferredOrder": [
        "clusterLogging"
      ],
      "additionalProperties": false
    },
    "ClusterCloudWatchLogging": {
      "properties": {
        "enableTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "preferredOrder": [
        "enableTypes"
      ],
      "additionalProperties": false
    },
    "ClusterConfig": {
      "required": [
        "metadata"
      ],
      "properties": {
        "apiVersion": {
          "type": "string",
          "x-intellij-html-description": "defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "examples": [
            "eksctl.io/v1alpha5"
          ]
        },
        "availabilityZones": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cloudWatch": {
          "$ref": "#/definitions/ClusterCloudWatch"
        },
        "fargateProfiles": {
          "items": {
            "$ref": "#/definitions/FargateProfile"
          },
          "type": "array"
        },
        "git": {
          "$ref": "#/definitions/Git"
        },
        "iam": {
          "$ref": "#/definitions/ClusterIAM"
        },
        "kind": {
          "type": "string",
          "x-intellij-html-description": "a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "examples": [
            "ClusterConfig"
          ]
        },
        "managedNodeGroups": {
          "items": {
            "$ref": "#/definitions/ManagedNodeGroup"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/ClusterMeta"
        },
        "nodeGroups": {
          "items": {
            "$ref": "#/definitions/NodeGroup"
          },
          "type": "array"
        },
        "secretsEncryption": {
          "$ref": "#/definitions/SecretsEncryption"
        },
        "status": {
          "$ref": "#/definitions/ClusterStatus"
        },
        "vpc": {
          "$ref": "#/definitions/ClusterVPC"
        }
      },
      "preferredOrder": [
        "kind",
        "apiVersion",
        "metadata",
        "iam",
        "vpc",
        "nodeGroups",
        "managedNodeGroups",
        "fargateProfiles",
        "availabilityZones",
        "cloudWatch",
        "secretsEncryption",
        "status",
        "git"
      ],
      "additionalProperties": false
    },
    "ClusterConfigList": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "x-intellij-html-description": "defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "examples": [
            "eksctl.io/v1alpha5"
          ]
        },
        "continue": {
          "type": "string",
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "x-intellij-html-description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message."
        },
        "items": {
          "items": {
            "$ref": "#/definitions/ClusterConfig"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "x-intellij-html-description": "a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "examples": [
            "ClusterConfig"
          ]
        },
        "remainingItemCount": {
          "type": "integer",
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "x-intellij-html-description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is <em>estimating</em> the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact."
        },
        "resourceVersion": {
          "type": "string",
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "x-intellij-html-description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "selfLink": {
          "type": "string",
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.  DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "x-intellij-html-description": "selfLink is a URL representing this object. Populated by the system. Read-only.  DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release."
        }
      },
      "preferredOrder": [
        "kind",
        "apiVersion",
        "selfLink",
        "resourceVersion",
        "continue",
        "remainingItemCount",
        "items"
      ],
      "additionalProperties": false
    },
    "ClusterEndpoints": {
      "properties": {
        "privateAccess": {
          "type": "boolean"
        },
        "publicAccess": {
          "type": "boolean"
        }
      },
      "preferredOrder": [
        "privateAccess",
        "publicAccess"
      ],
      "additionalProperties": false,
      "description": "holds cluster api server endpoint access information",
      "x-intellij-html-description": "holds cluster api server endpoint access information"
    },
    "ClusterIAM": {
      "properties": {
        "fargatePodExecutionRoleARN": {
          "type": "string"
        },
        "fargatePodExecutionRolePermissionsBoundary": {
          "type": "string"
        },
        "serviceAccounts": {
          "items": {
            "$ref": "#/definitions/ClusterIAMServiceAccount"
          },
          "type": "array"
        },
        "serviceRoleARN": {
          "type": "string"
        },
        "serviceRolePermissionsBoundary": {
          "type": "string"
        },
        "withOIDC": {
          "type": "boolean"
        }
      },
      "preferredOrder": [
        "serviceRoleARN",
        "serviceRolePermissionsBoundary",
        "fargatePodExecutionRoleARN",
        "fargatePodExecutionRolePermissionsBoundary",
        "withOIDC",
        "serviceAccounts"
      ],
      "additionalProperties": false
    },
    "ClusterIAMServiceAccount": {
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "attachPolicy": {
          "$ref": "#/definitions/InlineDocument"
        },
        "attachPolicyARNs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "permissionsBoundary": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/ClusterIAMServiceAccountStatus"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        }
      },
      "preferredOrder": [
        "name",
        "namespace",
        "labels",
        "annotations",
        "attachPolicyARNs",
        "attachPolicy",
        "permissionsBoundary",
        "status",
        "tags"
      ],
      "additionalProperties": false
    },
    "ClusterIAMServiceAccountStatus": {
      "properties": {
        "roleARN": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "roleARN"
      ],
      "additionalProperties": false
    },
    "ClusterMeta": {
      "required": [
        "name",
        "region"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "version": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "name",
        "region",
        "version",
        "tags"
      ],
      "additionalProperties": false
    },
    "ClusterNAT": {
      "properties": {
        "gateway": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "gateway"
      ],
      "additionalProperties": false,
      "description": "holds NAT gateway configuration options",
      "x-intellij-html-description": "holds NAT gateway configuration options"
    },
    "ClusterProvider": {},
    "ClusterStatus": {
      "properties": {
        "arn": {
          "type": "string"
        },
        "certificateAuthorityData": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "endpoint": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "endpoint",
        "certificateAuthorityData",
        "arn",
        "stackName"
      ],
      "additionalProperties": false
    },
    "ClusterSubnets": {
      "properties": {
        "private": {
          "additionalProperties": {
            "$ref": "#/definitions/Network"
          },
          "type": "object",
          "default": "{}"
        },
        "public": {
          "additionalProperties": {
            "$ref": "#/definitions/Network"
          },
          "type": "object",
          "default": "{}"
        }
      },
      "preferredOrder": [
        "private",
        "public"
      ],
      "additionalProperties": false,
      "description": "holds private and public subnets",
      "x-intellij-html-description": "holds private and public subnets"
    },
    "ClusterVPC": {
      "properties": {
        "autoAllocateIPv6": {
          "type": "boolean"
        },
        "cidr": {},
        "clusterEndpoints": {
          "$ref": "#/definitions/ClusterEndpoints"
        },
        "extraCIDRs": {
          "items": {},
          "type": "array",
          "description": "for additional CIDR associations, e.g. to use with separate CIDR for private subnets or any ad-hoc subnets",
          "x-intellij-html-description": "for additional CIDR associations, e.g. to use with separate CIDR for private subnets or any ad-hoc subnets"
        },
        "id": {
          "type": "string"
        },
        "nat": {
          "$ref": "#/definitions/ClusterNAT"
        },
        "publicAccessCIDRs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "securityGroup": {
          "type": "string"
        },
        "sharedNodeSecurityGroup": {
          "type": "string",
          "description": "for pre-defined shared node SG",
          "x-intellij-html-description": "for pre-defined shared node SG"
        },
        "subnets": {
          "$ref": "#/definitions/ClusterSubnets",
          "description": "subnets are either public or private for use with separate nodegroups these are keyed by AZ for convenience",
          "x-intellij-html-description": "subnets are either public or private for use with separate nodegroups these are keyed by AZ for convenience"
        }
      },
      "preferredOrder": [
        "id",
        "cidr",
        "securityGroup",
        "subnets",
        "extraCIDRs",
        "sharedNodeSecurityGroup",
        "autoAllocateIPv6",
        "nat",
        "clusterEndpoints",
        "publicAccessCIDRs"
      ],
      "additionalProperties": false,
      "description": "holds global subnet and all child public/private subnet",
      "x-intellij-html-description": "holds global subnet and all child public/private subnet"
    },
    "FargateProfile": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "of the Fargate profile.",
          "x-intellij-html-description": "of the Fargate profile."
        },
        "podExecutionRoleARN": {
          "type": "string",
          "description": "IAM role's ARN to use to run pods onto Fargate.",
          "x-intellij-html-description": "IAM role's ARN to use to run pods onto Fargate."
        },
        "selectors": {
          "items": {
            "$ref": "#/definitions/FargateProfileSelector"
          },
          "type": "array",
          "description": "define the rules to select workload to schedule onto Fargate.",
          "x-intellij-html-description": "define the rules to select workload to schedule onto Fargate."
        },
        "subnets": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "which Fargate should use to do network placement of the selected workload. If none provided, all subnets for the cluster will be used.",
          "x-intellij-html-description": "which Fargate should use to do network placement of the selected workload. If none provided, all subnets for the cluster will be used."
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        }
      },
      "preferredOrder": [
        "name",
        "podExecutionRoleARN",
        "selectors",
        "subnets",
        "tags"
      ],
      "additionalProperties": false
    },
    "FargateProfileSelector": {
      "required": [
        "namespace"
      ],
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Kubernetes label selectors to use to select workload.",
          "x-intellij-html-description": "Kubernetes label selectors to use to select workload.",
          "default": "{}"
        },
        "namespace": {
          "type": "string",
          "description": "Kubernetes namespace from which to select workload.",
          "x-intellij-html-description": "Kubernetes namespace from which to select workload."
        }
      },
      "preferredOrder": [
        "namespace",
        "labels"
      ],
      "additionalProperties": false
    },
    "Git": {
      "properties": {
        "bootstrapProfile": {
          "$ref": "#/definitions/Profile"
        },
        "operator": {
          "$ref": "#/definitions/Operator"
        },
        "repo": {
          "$ref": "#/definitions/Repo"
        }
      },
      "preferredOrder": [
        "repo",
        "operator",
        "bootstrapProfile"
      ],
      "additionalProperties": false
    },
    "InlineDocument": {
      "additionalProperties": {},
      "type": "object",
      "default": "{}"
    },
    "ManagedNodeGroup": {
      "required": [
        "name"
      ],
      "properties": {
        "amiFamily": {
          "type": "string"
        },
        "availabilityZones": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "desiredCapacity": {
          "type": "integer"
        },
        "iam": {
          "$ref": "#/definitions/NodeGroupIAM"
        },
        "instanceType": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "maxSize": {
          "type": "integer"
        },
        "minSize": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "privateNetworking": {
          "type": "boolean",
          "default": "false"
        },
        "ssh": {
          "$ref": "#/definitions/NodeGroupSSH"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "volumeSize": {
          "type": "integer"
        }
      },
      "preferredOrder": [
        "name",
        "amiFamily",
        "instanceType",
        "desiredCapacity",
        "minSize",
        "maxSize",
        "volumeSize",
        "availabilityZones",
        "ssh",
        "labels",
        "privateNetworking",
        "tags",
        "iam"
      ],
      "additionalProperties": false
    },
    "MetricsCollection": {
      "required": [
        "granularity"
      ],
      "properties": {
        "granularity": {
          "type": "string"
        },
        "metrics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "preferredOrder": [
        "granularity",
        "metrics"
      ],
      "additionalProperties": false
    },
    "NodeGroup": {
      "required": [
        "name"
      ],
      "properties": {
        "ami": {
          "type": "string"
        },
        "amiFamily": {
          "type": "string"
        },
        "asgMetricsCollection": {
          "items": {
            "$ref": "#/definitions/MetricsCollection"
          },
          "type": "array"
        },
        "availabilityZones": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "bottlerocket": {
          "$ref": "#/definitions/NodeGroupBottlerocket"
        },
        "classicLoadBalancerNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clusterDNS": {
          "type": "string"
        },
        "desiredCapacity": {
          "type": "integer"
        },
        "ebsOptimized": {
          "type": "boolean"
        },
        "iam": {
          "$ref": "#/definitions/NodeGroupIAM"
        },
        "instanceName": {
          "type": "string"
        },
        "instancePrefix": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "instancesDistribution": {
          "$ref": "#/definitions/NodeGroupInstancesDistribution"
        },
        "kubeletExtraConfig": {
          "$ref": "#/definitions/InlineDocument"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "maxPodsPerNode": {
          "type": "integer"
        },
        "maxSize": {
          "type": "integer"
        },
        "minSize": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "overrideBootstrapCommand": {
          "type": "string"
        },
        "preBootstrapCommands": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "privateNetworking": {
          "type": "boolean",
          "default": "false"
        },
        "securityGroups": {
          "$ref": "#/definitions/NodeGroupSGs"
        },
        "ssh": {
          "$ref": "#/definitions/NodeGroupSSH"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "taints": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "targetGroupARNs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "volumeEncrypted": {
          "type": "boolean"
        },
        "volumeIOPS": {
          "type": "integer"
        },
        "volumeKmsKeyID": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeSize": {
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "name",
        "ami",
        "amiFamily",
        "instanceType",
        "instancesDistribution",
        "instancePrefix",
        "instanceName",
        "availabilityZones",
        "tags",
        "privateNetworking",
        "securityGroups",
        "desiredCapacity",
        "minSize",
        "maxSize",
        "asgMetricsCollection",
        "ebsOptimized",
        "volumeSize",
        "volumeType",
        "volumeName",
        "volumeEncrypted",
        "volumeKmsKeyID",
        "volumeIOPS",
        "maxPodsPerNode",
        "labels",
        "taints",
        "classicLoadBalancerNames",
        "targetGroupARNs",
        "ssh",
        "iam",
        "bottlerocket",
        "preBootstrapCommands",
        "overrideBootstrapCommand",
        "clusterDNS",
        "kubeletExtraConfig"
      ],
      "additionalProperties": false
    },
    "NodeGroupBottlerocket": {
      "properties": {
        "enableAdminContainer": {
          "type": "boolean"
        },
        "settings": {
          "$ref": "#/definitions/InlineDocument"
        }
      },
      "preferredOrder": [
        "enableAdminContainer",
        "settings"
      ],
      "additionalProperties": false,
      "description": "holds the configuration for Bottlerocket based NodeGroups.",
      "x-intellij-html-description": "holds the configuration for Bottlerocket based NodeGroups."
    },
    "NodeGroupIAM": {
      "properties": {
        "attachPolicyARNs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instanceProfileARN": {
          "type": "string"
        },
        "instanceRoleARN": {
          "type": "string"
        },
        "instanceRoleName": {
          "type": "string"
        },
        "instanceRolePermissionsBoundary": {
          "type": "string"
        },
        "withAddonPolicies": {
          "$ref": "#/definitions/NodeGroupIAMAddonPolicies"
        }
      },
      "preferredOrder": [
        "attachPolicyARNs",
        "instanceProfileARN",
        "instanceRoleARN",
        "instanceRoleName",
        "instanceRolePermissionsBoundary",
        "withAddonPolicies"
      ],
      "additionalProperties": false,
      "description": "holds all IAM attributes of a NodeGroup",
      "x-intellij-html-description": "holds all IAM attributes of a NodeGroup"
    },
    "NodeGroupIAMAddonPolicies": {
      "properties": {
        "albIngress": {
          "type": "boolean"
        },
        "appMesh": {
          "type": "boolean"
        },
        "autoScaler": {
          "type": "boolean"
        },
        "certManager": {
          "type": "boolean"
        },
        "cloudWatch": {
          "type": "boolean"
        },
        "ebs": {
          "type": "boolean"
        },
        "efs": {
          "type": "boolean"
        },
        "externalDNS": {
          "type": "boolean"
        },
        "fsx": {
          "type": "boolean"
        },
        "imageBuilder": {
          "type": "boolean"
        },
        "xRay": {
          "type": "boolean"
        }
      },
      "preferredOrder": [
        "imageBuilder",
        "autoScaler",
        "externalDNS",
        "certManager",
        "appMesh",
        "ebs",
        "fsx",
        "efs",
        "albIngress",
        "xRay",
        "cloudWatch"
      ],
      "additionalProperties": false,
      "description": "holds all IAM addon policies",
      "x-intellij-html-description": "holds all IAM addon policies"
    },
    "NodeGroupInstancesDistribution": {
      "required": [
        "instanceTypes"
      ],
      "properties": {
        "instanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "maxPrice": {
          "type": "number"
        },
        "onDemandBaseCapacity": {
          "type": "integer"
        },
        "onDemandPercentageAboveBaseCapacity": {
          "type": "integer"
        },
        "spotAllocationStrategy": {
          "type": "string"
        },
        "spotInstancePools": {
          "type": "integer"
        }
      },
      "preferredOrder": [
        "instanceTypes",
        "maxPrice",
        "onDemandBaseCapacity",
        "onDemandPercentageAboveBaseCapacity",
        "spotInstancePools",
        "spotAllocationStrategy"
      ],
      "additionalProperties": false,
      "description": "holds the configuration for spot instances",
      "x-intellij-html-description": "holds the configuration for spot instances"
    },
    "NodeGroupSGs": {
      "properties": {
        "attachIDs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "withLocal": {
          "type": "boolean"
        },
        "withShared": {
          "type": "boolean"
        }
      },
      "preferredOrder": [
        "attachIDs",
        "withShared",
        "withLocal"
      ],
      "additionalProperties": false,
      "description": "holds all SG attributes of a NodeGroup",
      "x-intellij-html-description": "holds all SG attributes of a NodeGroup"
    },
    "NodeGroupSSH": {
      "properties": {
        "allow": {
          "type": "boolean"
        },
        "publicKey": {
          "type": "string"
        },
        "publicKeyName": {
          "type": "string"
        },
        "publicKeyPath": {
          "type": "string"
        },
        "sourceSecurityGroupIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "preferredOrder": [
        "allow",
        "publicKeyPath",
        "publicKey",
        "publicKeyName",
        "sourceSecurityGroupIds"
      ],
      "additionalProperties": false,
      "description": "holds all the ssh access configuration to a NodeGroup",
      "x-intellij-html-description": "holds all the ssh access configuration to a NodeGroup"
    },
    "NodeGroupType": {
      "type": "string"
    },
    "Operator": {
      "properties": {
        "label": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "withHelm": {
          "type": "boolean"
        }
      },
      "preferredOrder": [
        "label",
        "namespace",
        "withHelm"
      ],
      "additionalProperties": false
    },
    "Profile": {
      "properties": {
        "outputPath": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "source",
        "revision",
        "outputPath"
      ],
      "additionalProperties": false
    },
    "ProviderConfig": {},
    "Repo": {
      "properties": {
        "branch": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fluxPath": {
          "type": "string"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "privateSSHKeyPath": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "url",
        "branch",
        "paths",
        "fluxPath",
        "user",
        "email",
        "privateSSHKeyPath"
      ],
      "additionalProperties": false
    },
    "SecretsEncryption": {
      "required": [
        "keyARN"
      ],
      "properties": {
        "keyARN": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "keyARN"
      ],
      "additionalProperties": false
    },
    "SubnetTopology": {
      "type": "string",
      "description": "can be SubnetTopologyPrivate or SubnetTopologyPublic",
      "x-intellij-html-description": "can be SubnetTopologyPrivate or SubnetTopologyPublic"
    },
    "asset": {},
    "bindataFileInfo": {},
    "bintree": {},
    "nameSet": {
      "additionalProperties": {},
      "type": "object",
      "default": "{}"
    }
  }
}
